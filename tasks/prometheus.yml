---
# Installing prometheus
- name: Install prometheus if not installed
  block:
    - name: Create prometheus user
      become: true
      user:
        name: "{{ prometheus_user }}"
        shell: /usr/bin/false
        create_home: false

    - name: Create prometheus directories
      become: true
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ prometheus_user }}"
        group: "{{ prometheus_user }}"
      loop:
      - /etc/prometheus
      - /var/lib/prometheus

    - name: Download prometheus
      get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
        dest: "{{ download_location }}"

    - name: Untar prometheus
      unarchive:
        src: "{{ download_location }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
        remote_src: true
        dest: "{{ download_location }}"

    - name: Copy prometheus binary
      become: true
      copy:
        src: "{{ download_location }}/prometheus-{{ prometheus_version }}.linux-amd64/prometheus"
        remote_src: true
        dest: /usr/local/bin/
        mode: '0755'
      
    - name: Copy promtool binary
      become: true
      copy:
        src: "{{ download_location }}/prometheus-{{ prometheus_version }}.linux-amd64/promtool"
        remote_src: true
        dest: /usr/local/bin/
        mode: '0755'

    - name: Copy consoles to prometheus directory
      become: true
      copy:
        src: "{{ item }}"
        remote_src: true
        dest: /etc/prometheus/
        owner: "{{ prometheus_user }}"
        group: "{{ prometheus_user }}"
      loop:
        - "{{ download_location }}/prometheus-{{ prometheus_version }}.linux-amd64/consoles"
        - "{{ download_location }}/prometheus-{{ prometheus_version }}.linux-amd64/console_libraries"

    - name: Create config file
      become: true
      copy:
        src: prometheus.yml
        dest: /etc/prometheus/prometheus.yml
        owner: "{{ prometheus_user }}"
        group: "{{ prometheus_user }}"

    - name: Create datasource prometheus
      become: true
      copy:
        src: prometheus_datasource.yml
        dest: /etc/grafana/provisioning/datasources/sample.yaml

    - name: Create systemd service for prometheus
      become: true
      copy:
        src: prometheus.service
        dest: /etc/systemd/system/prometheus.service

    # Post installation
    - name: Reload systemd config
      become: true
      systemd:
        daemon_reload: yes

    - name: Cleanup obsolete files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ download_location }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
        - "{{ download_location }}/prometheus-{{ prometheus_version }}.linux-amd64"

    # Edit firewall rules
    - name: Allow incoming traffic on port 9090
      become: true
      firewalld:
        port: 9090/tcp
        permanent: yes
        immediate: yes
        state: enabled
      notify:
        - Reload firewalld
        - Restart Prometheus
  when: prometheus_install and ansible_facts.services["prometheus.service"] is not defined
